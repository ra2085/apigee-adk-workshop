openapi: 3.0.0
info:
  title: Product Catalog & Availability API
  description: >-
    Enables the frontend to query product information, pricing, and crucially,
    determine if an item is typically P2O or if there's any existing
    stock/incoming stock that could fulfill it (sometimes P2O is a fallback).
  version: 1.0.0
  contact: {}
  x-mock": true
servers:
  - url: https://@APIGEE_HOST@/product-catalog-and-availability-api
paths:
  /products:
    get:
      description: >-
        Retrieves a list of products, with optional filtering or pagination.
        Returns basic product information, price, and availability status.
      parameters:
        - description: Page number for pagination
          in: query
          name: page
          schema:
            minimum: 1
            type: integer
        - description: Number of products per page
          in: query
          name: pageSize
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: >-
            Filter products based on certain criteria (e.g., category, price
            range)
          in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemordered'
          description: Successful operation
        '400':
          content:
            application/json:
              example:
                code: invalid_parameter
                message: Invalid query parameter value.
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '500':
          content:
            application/json:
              example:
                code: internal_server_error
                message: An unexpected error occurred on the server.
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a list of products
      tags:
        - products
  /products/{productId}:
    delete:
      description: Deletes a product from the catalog based on its ID.
      operationId: deleteProduct
      responses:
        '204':
          description: Product successfully deleted. No content is returned.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Product not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Deletes a specific product from the catalog
      tags:
        - products
    get:
      description: >-
        Retrieves detailed information for a specific product, including product
        details, price, stock levels, lead times, and the P2O flag.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  additionalProperties:
                    description: >-
                      Allows for extensibility with additional product
                      attributes.
                    type: object
                  description:
                    description: Detailed description of the product.
                    type: string
                  leadTime:
                    $ref: '#/components/schemas/LeadTime'
                  name:
                    description: Name of the product.
                    type: string
                  p2OFlag:
                    $ref: '#/components/schemas/shippingaddress'
                  price:
                    $ref: '#/components/schemas/itemordered'
                  productId:
                    $ref: '#/components/schemas/itemordered'
                  stockLevel:
                    $ref: '#/components/schemas/StockLevel'
                required:
                  - productId
                  - name
                  - description
                  - price
                  - stockLevel
                  - leadTime
                  - p2OFlag
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Product not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieve a specific product
      tags:
        - products
    parameters:
      - description: Unique identifier for the product.
        in: path
        name: productId
        required: true
        schema:
          type: string
    put:
      description: >-
        Updates the details of a specific product, including product details,
        price, stock levels, lead times, and the P2O flag.
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              properties:
                additionalProperties:
                  description: Allows for extensibility with additional product attributes.
                  type: object
                description:
                  description: Detailed description of the product.
                  type: string
                leadTime:
                  $ref: '#/components/schemas/LeadTime'
                name:
                  description: Name of the product.
                  type: string
                p2OFlag:
                  $ref: '#/components/schemas/shippingaddress'
                price:
                  $ref: '#/components/schemas/itemordered'
                stockLevel:
                  $ref: '#/components/schemas/StockLevel'
              required:
                - name
                - description
                - price
                - stockLevel
                - leadTime
                - p2OFlag
              type: object
        description: Product details to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemordered'
          description: Successful update of the product.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request - Invalid input.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Product not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error.
      summary: Update a product
      tags:
        - products
  /products/{productId}/availability:
    get:
      description: >-
        Checks the availability of a specific product, returning stock levels,
        lead times, and whether it's P2O or available from existing/incoming
        stock.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  leadTime:
                    $ref: '#/components/schemas/LeadTime'
                  p2OFlag:
                    $ref: '#/components/schemas/shippingaddress'
                  stockLevel:
                    $ref: '#/components/schemas/StockLevel'
                required:
                  - stockLevel
                  - leadTime
                  - p2OFlag
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Product not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Check Product Availability
      tags:
        - products
    parameters:
      - description: Unique identifier for the product.
        in: path
        name: productId
        required: true
        schema:
          type: string
components:
  schemas:
    Error:
      description: Schema for error responses.
      properties:
        code:
          description: Error code identifying the type of error.
          type: string
        details:
          description: Optional details about the error.
          type: string
        message:
          description: Human-readable error message.
          type: string
      required:
        - code
        - message
      type: object
    LeadTime:
      description: The estimated lead time for the product.
      properties:
        days:
          description: The estimated number of days for the product to be delivered.
          format: int32
          type: integer
        description:
          description: A textual description of the lead time.
          type: string
      required:
        - days
        - description
      type: object
    StockLevel:
      description: >-
        Represents the stock level of a product, including available quantity,
        incoming quantity, and backorder availability.
      properties:
        available:
          description: The quantity of the product currently in stock.
          type: integer
        backorderable:
          description: Indicates whether the product can be backordered if out of stock.
          type: boolean
        incoming:
          description: The quantity of the product expected to arrive in the future.
          type: integer
      required:
        - available
        - backorderable
        - incoming
      type: object
    itemordered:
      description: Details of an item included in the order.
      properties:
        itemId:
          description: Unique identifier for the item.
          type: string
        price:
          description: Price per unit.
          format: float
          type: number
        productName:
          description: Name of the product ordered.
          type: string
        quantity:
          description: Number of units ordered.
          format: int32
          type: integer
      required:
        - itemId
        - productName
        - quantity
        - price
      type: object
    shippingaddress:
      description: Address to which the order will be shipped.
      properties:
        city:
          description: Shipping city.
          type: string
        country:
          description: Shipping country.
          type: string
        state:
          description: Shipping state.
          type: string
        street:
          description: Shipping street address.
          type: string
        zip:
          description: Shipping zip code.
          type: string
      required:
        - city
        - country
        - state
        - street
        - zip
      type: object